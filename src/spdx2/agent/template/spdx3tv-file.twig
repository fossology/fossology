{# SPDX-FileCopyrightText: Â© 2015 Siemens AG

   SPDX-License-Identifier: FSFAP
#}

##File

type: software_File
spdxId: File:SPDXRef-item{{ fileId }}
creationInfo: creationInfo:creationInfo1
name: {{ fileName }}

verifiedUsing.type: Hash
verifiedUsing.algorithm: sha1
verifiedUsing.hashValue: {{ sha1 | lower }}

verifiedUsing.type: Hash
verifiedUsing.algorithm: sha256
verifiedUsing.hashValue: {{ sha256 | lower }}

verifiedUsing.type: Hash
verifiedUsing.algorithm: md5
verifiedUsing.hashValue: {{ md5 | lower }}

{%- if fileData.isCleared() %}
{%- if fileData.concludedLicenses|default is empty %}

type: expandedlicensing_IndividualLicensingInfo
spdxId: File:SPDXRef-item{{ fileId }}#NoneLicense
creationInfo: creationInfo:creationInfo1
{%- elseif fileData.concludedLicenses|length > 1 %}
{%- if dualLicense %}

type: expandedlicensing_DisjunctiveLicenseSet
{%- else %}

type: expandedlicensing_ConjunctiveLicenseSet
{%- endif %}
spdxId: File:SPDXRef-item{{ fileId }}
creationInfo: creationInfo:creationInfo1
expandedlicensing_member.type: simplelicensing_AnyLicenseInfo
expandedlicensing_member.creationInfo: creationInfo:creationInfo1
{%- for res in fileData.concludedLicenses %}
{%- if licenseList[res].licenseObj.spdxId starts with 'LicenseRef-' or licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
{%- set licId = licenseList[res].licenseObj.spdxId %}
{%- if licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
{%- set licId = licenseList[res].licenseObj.shortName %}
{%- endif %}
expandedlicensing_member.spdxId: URI:#{{ licId|replace({' ': '-'})|url_encode }}
{%- else %}
expandedlicensing_member.spdxId: URI:#{{ licenseList[res].licenseObj.spdxId|replace({' ': '-'})|url_encode }}
expandedlicensing_member.name: {{ licenseList[res].licenseObj.fullName|e }}
{%- endif %}
{%- endfor %}
{%- else %}
{%- if fileData.concludedLicenses|length == 1 %}
{%- set res = fileData.concludedLicenses[0] %}
{%- if licenseList[res].licenseObj.spdxId starts with 'LicenseRef-' or licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
{%- set licId = licenseList[res].licenseObj.spdxId %}
{%- if licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
{%- set licId = licenseList[res].licenseObj.shortName %}
{%- endif %}
type: simplelicensing_AnyLicenseInfo
creationInfo: creationInfo:creationInfo1
spdxId: File:SPDXRef-item{{ fileId }}#{{ licId|replace({' ': '-'})|url_encode }}
{%- else %}
type: simplelicensing_AnyLicenseInfo
creationInfo: creationInfo:creationInfo1
spdxId: File:SPDXRef-item{{ fileId }}#{{ licenseList[res].licenseObj.spdxId|replace({' ': '-'})|url_encode }}
name: {{ licenseList[res].licenseObj.fullName|e }}
{%- endif %}
{%- endif %}
{%- endif %}
{%- else %}

type: expandedlicensing_IndividualLicensingInfo
spdxId: File:SPDXRef-item{{ fileId }}#NoAssertionLicense
creationInfo: creationInfo:creationInfo1
{%- endif %}



{%- if licenseCommentState %}
{%- if fileData.comments is empty %}

comment: NOASSERTION
{%- else %}

comment: <text>{{ fileData.comments|join('\n')|replace({'<text>':'&lt;text&gt;','</text>':'&lt;/text&gt;'})|replace({'\f':''}) }}</text>
{%- endif %}
{%- endif %}

{%- if fileData.copyrights|default is empty %}

software_copyrightText: NOASSERTION
{%- else %}

software_copyrightText: <text> {{ fileData.copyrights|join('\n')|replace({'<text>':'&lt;text&gt;','</text>':'&lt;/text&gt;'})|replace({'\f':'','"':"'", '\n':''}) }} </text>
{%- endif %}

{%- if fileData.acknowledgements|default is not empty %}

software_attributionText: <text> {{ fileData.acknowledgements|join('\n')|replace({'<text>':'&lt;text&gt;','</text>':'&lt;/text&gt;'})|replace({'\f':'','"':"'", '\n':''}) }} </text>
{%- endif %}


