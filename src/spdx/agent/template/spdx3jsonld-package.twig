{# SPDX-FileCopyrightText: Â© 2015 Siemens AG

   SPDX-License-Identifier: FSFAP
#}
{%- set dualLicense = false -%}
{% if mainLicenses|length > 2 %}
  {% for res in mainLicenses %}
    {% if 'Dual-license' == licenseList[res].licenseObj.shortName %}
      {% set dualLicense = true %}
    {% endif %}
  {% endfor %}
{%- endif -%}
{
  "type": "software_Package",
  "spdxId": "Package:SPDXRef-upload{{ packageId }}",
  "creationInfo":"creationInfo:creationInfo1",
  "name": "{{ packageName }}",
  {%- if licenseComments is not empty ~%}
  "comment": "<text> {{ licenseComments|replace({'<text>':'&lt;text&gt;','</text>':'&lt;/text&gt;'})| replace({'\f':'','"':"'", '\n':''})}} </text>",
  {% endif %}
  "software_downloadLocation": "NOASSERTION",
  {% if packageVersion is not empty %}
  "software_packageVersion": "{{ packageVersion|e }}",
  {% endif %}
  {% if releaseDate is not empty %}
  "releaseTime":"{{ releaseDate }}",
  {% endif %}
  {%- if componentId is not empty ~%}
  "externalRef": [
        {
          "type": "ExternalRef",
          "comment":"Package-Manager"
          "externalRefType": "{{ componentType }}",
          "locator":["{{ componentId|trim }}"]
        }
      ],
  {%- endif ~%}
  "software_copyrightText": "NOASSERTION",
  {% if obligations|default is not empty %}
  "software_attributionText": ["<text> {{ obligations|join('\n')
                                             |replace({'<text>':'&lt;text&gt;','</text>':'&lt;/text&gt;'})
                                             |replace({'\f':''}) }} </text>"],
  {% endif %}
  "verifiedUsing": [
    {
      "type": "Hash",
      "algorithm": "sha1",
      "hashValue": "{{ sha1 | lower }}"
    },
    {
      "type": "Hash",
      "algorithm": "sha256",
      "hashValue": "{{ sha256 | lower }}"
    },
    {
      "type": "Hash",
      "algorithm": "md5",
      "hashValue": "{{ md5 | lower }}"
    }
  ]
},
{
  "type": "PackageVerificationCode",
  "algorithm": "sha1",
  "hashValue": "{{verificationCode}}"
},
{% if mainLicenses|length > 1 %}
{
  {% if dualLicense %}
    "type": "expandedlicensing_DisjunctiveLicenseSet",
  {% else %}
    "type": "expandedlicensing_ConjunctiveLicenseSet",
  {% endif %}
  "spdxId": "Package:SPDXRef-upload{{ packageId }}",
  "creationInfo": "creationInfo:creationInfo1",
  "expandedlicensing_member": [
    {% for res in mainLicenses %}
      {% if licenseList[res].licenseObj.spdxId starts with 'LicenseRef-' %}
        {% set licId = licenseList[res].licenseObj.spdxId %}
        {% if licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
          {% set licId = licenseList[res].licenseObj.shortName %}
        {% endif %}
        {
          "type": "simplelicensing_AnyLicenseInfo",
          "creationInfo": "creationInfo:creationInfo1",
          "spdxId": "URI:#{{ licId|replace({' ': '-'})|url_encode }}"
        }{% if not loop.last %},{{ "\n" }}{% endif %}
      {% else %}
        {
          "type": "simplelicensing_AnyLicenseInfo",
          "creationInfo": "creationInfo:creationInfo1",
          "spdxId": "URI:#{{ licenseList[res].licenseObj.spdxId|replace({' ': '-'})|url_encode }}"
        }{% if not loop.last %},{{ "\n" }}{% endif %}
      {% endif %}
    {% endfor %}
  ]
},
{% elseif mainLicenses|length == 1 %}
  {% set res = mainLicenses[0] %}
  {% if licenseList[res].licenseObj.spdxId starts with 'LicenseRef-' %}
    {% set licId = licenseList[res].licenseObj.spdxId %}
    {% if licenseList[res].licenseObj.shortName starts with 'LicenseRef-' %}
      {% set licId = licenseList[res].licenseObj.shortName %}
    {% endif %}
    {
      "type": "simplelicensing_AnyLicenseInfo",
      "creationInfo": "creationInfo:creationInfo1",
      "spdxId": "URI:#{{ licId|replace({' ': '-'})|url_encode }}"
    },
  {% else %}
    {
      "type": "simplelicensing_AnyLicenseInfo",
      "creationInfo": "creationInfo:creationInfo1",
      "spdxId": "URI:#{{ licenseList[res].licenseObj.spdxId|replace({' ': '-'})|url_encode }}"
    },
  {% endif %}
{% endif %}
{
    "type": "Relationship",
    "spdxId": "URI:SPDXRef-Relationship-0",
    "from": "SpdxDocument:SpdxRef-DOCUMENT",
    "to": [
        "Package:SPDXRef-upload{{ packageId }}"
    ],
    "relationshipType": "describes",
    "creationInfo":"creationInfo:creationInfo1"
},
{{ fileNodes }}