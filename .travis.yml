# SPDX-FileCopyrightText: Â© 2014-2021 Siemens AG

# SPDX-License-Identifier: GPL-2.0-only AND LGPL-2.1-only

# build FOSSology on Travis CI - https://travis-ci.org/

language: php
dist: bionic
os: linux
php: 7.1
cache:
  ccache: true
  directories:
    - $HOME/.composer
env:
  global:
    - PATH="/usr/lib/ccache/:$TRAVIS_BUILD_DIR/src/ununpack/agent/:$PATH"
    - COMPOSER_HOME="$HOME/.composer/"
    - PGPORT=5432

addons:
  apt:
    packages: &default_packages
      - cabextract
      - genisoimage
      - libboost-program-options-dev
      - libboost-regex-dev
      - libboost-system-dev
      - libboost-filesystem-dev
      - libglib2.0-dev
      - libcppunit-dev
      - libcunit1-dev
      - libdbd-sqlite3-perl
      - libjsoncpp-dev
      - libjson-c-dev
      - liblocal-lib-perl
      - libmagic-dev
      - librpm-dev
      - libspreadsheet-writeexcel-perl
      - libtext-template-perl
      - php-cli
      - php-pgsql
      - php-zip
      - php-xml
      - php-mbstring
      - php-gd
      - poppler-utils
      - p7zip
      - p7zip-full
      - rpm
      - sleuthkit
      - unrar-free
      - upx-ucl
      - libicu-dev
      - libgcrypt20-dev
      - cppcheck

services: postgresql

jobs:
  fast_finish: true
  include:
#### Docker tests ###########################
    - name: Docker Tests
      addons: {}
      services: docker
      before_script: docker-compose build
      script:
        - src/testing/docker/test-cluster.sh
        - src/testing/docker/test-standalone.sh
#### C/C++ agent tests ###########################
    - &compiler-tests
      env: CC=gcc-6 CXX=g++-6 CFLAGS='-Wall'
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-6
            - g++-6
      install:
        - composer install --prefer-dist --working-dir=src
        - ./install/scripts/install-spdx-tools.sh
        - sudo /usr/sbin/update-ccache-symlinks
        - ls /usr/lib/ccache/
      before_script: &default-before-script
        ./utils/prepare-test -afty
      script:
        - make test
      after_success:
        - ccache -s
    - <<: *compiler-tests
      env: CC=gcc-7 CXX=g++-7 CFLAGS='-Wall'
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-7
            - g++-7
    - <<: *compiler-tests
      env: CC=gcc-8 CXX=g++-8 CFLAGS='-Wall'
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-8
            - g++-8
    - <<: *compiler-tests
      env: CC=gcc-9 CXX=g++-9 CFLAGS='-Wall'
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-9
            - g++-9
    - <<: *compiler-tests
      env: CC=gcc-10 CXX=g++-10 CFLAGS='-Wall'
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-10
            - g++-10
    - <<: *compiler-tests
      env: CC=gcc-10 CXX=g++-10 CFLAGS='-Wall'
      addons:
        postgresql: "13"
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - *default_packages
            - gcc-10
            - g++-10
            - postgresql-13
            - postgresql-client-13
      before_script: &postgres-before-script
        # Use default port
        - sudo sed -i 's/port = 5433/port = 5432/' /etc/postgresql/13/main/postgresql.conf
        # Use 10 auth config:
        - sudo cp /etc/postgresql/{10,13}/main/pg_hba.conf
        - sudo service postgresql restart
        - *default-before-script
#### PHPUnit tests ###########################
    - &php7-phpunit-tests
      addons: {}
      php: 7.1
      install: composer update --ignore-platform-reqs --with-dependencies --prefer-dist --working-dir=src phpunit/phpunit
      before_script: ./utils/prepare-test -afty
      script:
        - set -o pipefail
        - make build-lib VERSIONFILE build-cli
        - phpdbg -qrr src/vendor/bin/phpunit -csrc/phpunit.xml --testsuite="Fossology PhpUnit Test Suite" --colors=always | grep -v 'script>\|c.log'
      after_success: php src/vendor/bin/php-coveralls -vv -o coveralls.json -x clover.xml
    - <<: *php7-phpunit-tests
      php: 7.2
    - <<: *php7-phpunit-tests
      php: 7.3
    - <<: *php7-phpunit-tests
      php: 7.4
      addons:
        postgresql: "13"
        apt:
          packages:
            - postgresql-13
            - postgresql-client-13
            - *default_packages
      script:
        - set -o pipefail
        - make build-lib VERSIONFILE build-cli
        - ./src/vendor/bin/phpunit -csrc/phpunit.xml --testsuite="Fossology PhpUnit Test Suite" --colors=always
      before_script: *postgres-before-script
