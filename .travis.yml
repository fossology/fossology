# Copyright Siemens AG, 2014-2015
# SPDX-License-Identifier:	GPL-2.0 LGPL-2.1

# build FOSSology on Travis CI - https://travis-ci.org/

language: php

addons:
 - postgresql: "9.3"
cache:
 - apt

install:
 - sudo apt-get update -qq
 - sudo apt-get install -qq debhelper libglib2.0-dev libmagic-dev libxml2-dev
        libtext-template-perl librpm-dev  rpm libpcre3-dev libssl-dev
        apache2 libapache2-mod-php5 php5-pgsql php-pear php5-cli
        binutils bzip2 cabextract cpio sleuthkit genisoimage poppler-utils
        rpm upx-ucl unrar-free unzip p7zip-full p7zip wget git-core subversion
        libpq-dev
 - sudo apt-get install -qq cppcheck

before_script:
 - cd src/
 - composer install --dev
 - composer self-update
 - cd ..
 - psql -c "CREATE USER fossy WITH PASSWORD 'fossy';" -U postgres
 - psql -c "create database fossology;" -U postgres
 - psql -c "create database fosstestone;" -U postgres

env:
  global:
    - TEST_NAME=""

matrix:
  include:
    - env:
        - TEST_NAME="make (gcc)"
      compiler: gcc
      script:
       - make

    - env:
        - TEST_NAME="make phpunit (gcc)"
      compiler: gcc
      
      script:
       - make
       - phpunit -csrc/phpunit.xml
       - src/vendor/bin/phpcs --standard=src/fossy-ruleset.xml src/lib/php/*/

    # TODO fix Makefile to use clang
    - env:
        - TEST_NAME="make (clang)"
      compiler: clang
      script:
       - make

    - env:
        - TEST_NAME="make install"
      compiler: gcc
      script:
       - curl -sS https://getcomposer.org/installer | php
       - sudo mv composer.phar /usr/local/bin/composer
       - sudo cd src && composer install && composer update && cd ..
       - sudo make install
       - sudo /usr/local/lib/fossology/fo-postinstall

    - env:
        - TEST_NAME="Unit Test (gcc)"
      compiler: gcc
      before_script:
       - sudo apt-get install libcunit1-dev 
       - cd src/
       - composer install --dev
       - composer self-update
       - cd ..
      script:
       - make
       - curl -sS https://getcomposer.org/installer | php
       - sudo mv composer.phar /usr/local/bin/composer
       - sudo cd src && composer install && composer update && cd ..
       - sudo make install
       - cd src/testing/unit
       - ./runAgentUnit.php

    # QA jobs for code analytics and metrics
    # static code analysis with cppcheck (we can add --enable=all later)
    - env:    TEST_NAME="cppcheck"
      script: cppcheck -q -isrc/nomos/agent_tests/testdata/NomosTestfiles/ src/
      before_install: sudo apt-get install cppcheck
    # search for TODO within source tree
    - env:    TEST_NAME="TODO"
      script: grep -r TODO *
    # search for FIXME within source tree
    - env:    TEST_NAME="FIXME"
      script: grep -r FIXME *
    # search for HACK within source tree
    - env:    TEST_NAME="HACK"
      script: grep -r HACK *
    # some statistics about the code base
    - env:    TEST_NAME="sloccount"
      script: sloccount .
      before_install: sudo apt-get install sloccount
    # some info about the build machine
    - env:    TEST_NAME="info"
      script:
       - dpkg -l
       - uname -a
# TODO make it perfect ;-r
