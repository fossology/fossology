#!/bin/sh
# postrm script for fossology
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge)
       # get rid of the database, this is a clone of upstream's
       # fo-cleanold -d
       # it might be interesting to use dbconfig-common, but it might be
       # overkill

       #first check that the db is running
       su postgres -c 'echo \\q|psql' || (echo "WARNING: postgresql not running, not dropping database"; exit 0)

       # and next that the db exists
       su postgres -c 'psql -l' |grep -q fossology || (echo "NOTE: database already cleaned up";exit 0)

       echo "*** Removing database ***"
       # kill anybody using the database
       pkill -f -u postgres fossy || true
       su postgres -c 'echo "drop database fossology"|psql' || echo "WARNING: failed to drop database, please clean up by hand"
    ;;

    remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


